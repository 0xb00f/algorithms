#module with helper functions for project euler problems

import math

# simple primality test - TODO: more efficient one 
def is_prime(n):

    for i in range(2,math.sqrt(n)+1):

        if n % i == 0:

            return False

    return True

# generate primes up to n
def primes_to(n):

# uses one version of the sieve of eratosthenes

    record = [True for i in range(n+1)]	

    for i in range(2,math.sqrt(n)+1):

	if record[i]:

            j = i*i
            k = 1

            while j <= n:

                record[j] = False
                j += k*i
                k += 1

    ret = []

    for i in range(2,len(record)):

        if record[i]:

            ret.append(i)

    return record
	
#return the nth prime (a stored list, then a generator?)

# TODO: decompose into list of prime factors
